#!/bin/bash

# VERIFICARE COMPILARE SI RULARE PROGRAM

if [[ -z "$1" ]]
then
    echo "Eroare: Te rog specifica numele directorului temei."
    echo "Utilizare: $0 <nume_director_tema>"
    exit 1
fi

TEMA_DIR="$1"

if [[ ! -d "$TEMA_DIR" ]]
then
    echo "Eroare: Directorul specificat '$TEMA_DIR' nu exista."
    exit 1
fi

cd "$TEMA_DIR"

echo " "
echo " "

# Compilare proiect
g++ -o my_program sources/*.cpp -Iheaders 2> compile_errors.txt

if [[ $? -ne 0 ]]
then
    echo "Eroare: Compilarea a esuat. Verifica erorile de mai jos:"
    cat compile_errors.txt
    exit 1
fi

# Rulare program
./my_program > run_output.txt 2> run_errors.txt

if [[ $? -ne 0 ]]
then
    echo "Eroare: Programul a intampinat erori in timpul rularii. Verifica erorile de mai jos:"
    cat run_errors.txt
    exit 1
fi

if [[ $(grep -i "warning" compile_errors.txt) ]]
then
    echo "Avertizare: Au existat warning-uri in timpul compilarii. Verifica warning-urile de mai jos:"
    cat compile_errors.txt
    exit 1
fi

echo "Succes: Programul a fost compilat si rulat fara erori sau warning-uri."
cat run_output.txt

rm compile_errors.txt run_output.txt run_errors.txt

echo " "
echo " "

# AFISARE CLASE

cd headers

# Cautare clase in headers
nr_cls=0
echo "Clasele definite in cadrul temei sunt:"
for file in *.h
do
    echo "In fișierul: $file"
    egrep "^class" $file | cut -f2 -d" "
    echo "-----------------------"
    let nr_cls=nr_cls+1
done

echo "Numarul total de clase:" $nr_cls

echo " "
echo " "

# DIAGRAMA

echo "Diagrama simplificata a claselor:"

for file in *.h
do
    echo "Fișierul: $file"
    line=`egrep "^class" $file`
    class=`echo $line | cut -f2 -d" "`
    inh=`echo $line | cut -f2- -d: | sed 's/^[[:space:]]*//'`
    public=`echo $inh | cut -f1 -d" "`
    result=`echo $inh | sed 's/public\s*//g'`
    echo "  Class: $class"
        if [[ "$public" == "public" ]]
        then
            echo "    Inherits from: $result"
        fi
        
    echo "-----------------------"
done

echo " "
echo " "

# FUNCTIILE DIN FIECARE CLASA

echo "Functiile implementate in fiecare clasa:"
for file in *.h
do
    echo "Fișierul: $file"
    line=`egrep "^class" $file`
    class=`echo $line | cut -f2 -d" "`
    echo "  Class: $class"
    
    func=`cat $file | egrep ".+);$|override;$|0;$"`
    
    echo "$func"

done

echo " "
echo " "

# INTERFETE

echo "In cadrul programului exista urmatoarele interfete:"

nr_int=0
int_list=""
for file in *.h
do
    class=`cat $file | egrep "^class" | cut -f2 -d" "`
    total=`cat $file | egrep ".+;$" | head -n -1 | wc -l`
    virtual=`cat $file | egrep ".+0;$" | wc -l`
    let dif=total-virtual
    if [[ $dif -eq 0 && $virtual -ne 0 ]]
    then
    	int_list+="$class "
    	let nr_int=nr_int+1
    fi
done

echo $int_list

echo " "
echo " "

# CLASE ABSTRACTE

echo "In cadrul programului exista urmatoarele clase abstracte:"

for c in $int_list
do
virt_list=""
    cc=${c}.h
    while read line
    do
    	virtual=`echo $line | egrep ".+0;$"`
    	if [[ ! -z $virtual ]]
    	then
            clean_line=$(echo "$virtual" | sed 's/virtual //' | sed 's/ = 0//')
    	    virt_list+="$clean_line "
    	fi
    done < $cc
    for file in *.h
    do
    	if [[ $file != $cc ]]
    	then
            ver=`cat $file | egrep "^class" | egrep "$c"`
        if [[ ! -z $ver ]]
        then
            ok=0
            for v in $virt_list
            do
                verr=`cat $file | egrep "$v"`
                if [[ ! -z $verr ]]
                then
                    virt_list=$(echo "$virt_list" | sed 's/$v//g')
                    ok=1
                fi
            done
            if [[ $ok -eq 1 ]]
            then 
            	abs=$(echo $file | sed 's/\.h$//')
            	abs_list+="$abs"
            fi
        fi
        fi
    done
done

echo $abs_list

echo " "
echo " "

# CONSTRUCTORI SI DESTRUCTORI

total_classes=0
classes_with_constructors=0
classes_with_destructors=0

check_constructors_and_destructors() 
{
    local file=$1
    local class_name=$2
    constructor_found=$(egrep "($class_name\(|$class_name\s*\()" "$file")
    destructor_found=$(egrep "(~$class_name\s*\()" "$file")

    # Increment the total class counter
    total_classes=$((total_classes + 1))

    if [[ ! -z $constructor_found ]]
    then
        classes_with_constructors=$((classes_with_constructors + 1))
    else
        echo "Warning: Clasa $class_name din fisierul $file nu are constructori."
    fi

    if [[ ! -z $destructor_found ]]
    then
        classes_with_destructors=$((classes_with_destructors + 1))
    else
        echo "Warning: Clasa $class_name din fisierul $file nu are destructori."
    fi
}

for header in *.h
do
    echo "Verificare fisier $header"

    class_names=$(cat $header | egrep "^class" | cut -f2 -d" ")

    for class in $class_names; do
        check_constructors_and_destructors "$header" "$class"
    done

    echo ""
done

if [[ $total_classes -gt 0 ]]
then
    constructor_percentage=$(echo "scale=2; ($classes_with_constructors / $total_classes) * 100" | bc)
    destructor_percentage=$(echo "scale=2; ($classes_with_destructors / $total_classes) * 100" | bc)

    echo "Numarul total de clase: $total_classes"
    echo "Clase care contin constructori: $classes_with_constructors ($constructor_percentage%)"
    echo "Clase care contin destructori: $classes_with_destructors ($destructor_percentage%)"
fi

echo " "
echo " "

# PLAGIAT

cd ../sources

for s1 in *.cpp
do
for s2 in *.cpp
do

file1=$s1
file2=$s2

if [[ $file1 != $file2 ]]
then

if [[ ! -f "$file1" ]]
then
    echo "Fișierul $file1 nu există."
    exit 1
fi

if [[ ! -f "$file2" ]]
then
    echo "Fișierul $file2 nu există."
    exit 1
fi

result=$(diff -q "$file1" "$file2")
found=0

if [[ -z "$result" ]]
then
    found=1
    break
fi

fi
done
done

if [[ $found -eq 1 ]]
then
echo "Există posibilitatea de plagiat."
else
echo "Probabil nu există plagiat."
fi

echo " "
echo " "
